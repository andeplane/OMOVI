{"version":3,"sources":["../../src/OMOVIVisualizer.tsx","../../src/core/materials.ts","../../src/core/visualizer.ts","../../src/core/geometries/particles/particles.ts","../../src/core/geometries/particles/fragment.ts","../../src/core/atomtypes.ts","../../src/parsers/xyzparser.ts","App.tsx","index.tsx"],"names":["constructor","materialType","parameters","copy","THREE","castedSource","this","defines","clone","material","Material","materialMap","inverseModelMatrix","modelViewMatrix","normalMatrix","inverseNormalMatrix","Visualizer","domElement","add","object","remove","setupLights","ambientLight","directionalLight","scene","setupCanvas","canvas","setupCamera","camera","updateUniforms","Object","animate","requestAnimationFrame","resizeIfNeeded","rendererSize","rendererPixelWidth","rendererPixelHeight","clientWidth","clientHeight","clientPixelWidth","window","clientPixelHeight","clientTextureSize","scale","Math","width","height","adjustCamera","renderer","OMOVIVisualizer","particles","useRef","useState","useEffect","newVisualizer","setVisualizer","prevParticlesRef","prevParticles","visualizer","style","ref","capacity","getRadius","index","getPosition","getGeometry","baseGeometry","geometry","getMesh","color","value","shader","createMaterial","matrix","i","Float32Array","addParticle","r","g","b","numParticles","radius","console","AtomTypes","H","fullname","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","addParticlesToFrame","lines","j","frame","lineData","element","atomType","x","parseFloat","y","z","parseXyz","data","frames","numLines","skipNextLine","readNumParticles","parseInt","isNaN","currentFrame","particles1","Particles","particles2","random","App","setData","setFrame","a","log","fetch","xyzFile","text","downloadData","setTimeout","length","nextFrame","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bac00bbb.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from 'react'\nimport Visualizer from './core/visualizer'\nimport Particles from './core/geometries/particles/particles'\n\nlet newVisualizer: Visualizer | undefined\n\nconst OMOVIVisualizer = ({ particles }: { particles: Particles }) => {\n  const domElement = useRef<HTMLDivElement | null>(null)\n  const [visualizer, setVisualizer] = useState<Visualizer | undefined>(\n    undefined\n  )\n\n  useEffect(() => {\n    if (domElement.current && !newVisualizer) {\n      newVisualizer = new Visualizer(domElement.current)\n      setVisualizer(newVisualizer)\n    }\n  }, [domElement, visualizer])\n\n  const prevParticlesRef = useRef<Particles>()\n  useEffect(() => {\n    prevParticlesRef.current = particles\n  })\n  const prevParticles = prevParticlesRef.current\n\n  useEffect(() => {\n    if (!visualizer) {\n      return\n    }\n\n    if (prevParticles) {\n      visualizer.remove(prevParticles.getMesh())\n    }\n    visualizer.add(particles.getMesh())\n  }, [particles, visualizer])\n\n  return (\n    <div style={{ height: '100%', width: '100%' }}>\n      <div style={{ height: '100%', width: '100%' }} ref={domElement} />\n    </div>\n  )\n}\nexport default OMOVIVisualizer\n","import * as THREE from 'three'\n\nexport interface Uniforms {\n  [name: string]: THREE.IUniform\n}\n\nexport interface Extensions {\n  fragDepth?: boolean\n}\n\nclass Material extends THREE.MeshPhongMaterial {\n  materialType: string\n  uniforms: Uniforms\n  extensions: Extensions\n\n  constructor(\n    materialType: string,\n    parameters?: THREE.MeshPhongMaterialParameters\n  ) {\n    super(parameters)\n    // @ts-ignore\n    this.materialType = materialType\n    this.uniforms = {}\n    this.extensions = {}\n  }\n\n  copy(source: THREE.Material): this {\n    THREE.MeshPhongMaterial.prototype.copy.call(this, source)\n    const castedSource = source as Material\n    this.type = castedSource.type\n    this.defines = { ...castedSource.defines }\n    this.uniforms = castedSource.uniforms\n    this.onBeforeCompile = castedSource.onBeforeCompile\n    return this\n  }\n\n  clone(): this {\n    // three.js uses \"this\" for no good reason, and we need to match that\n    const material = new THREE.MeshPhongMaterial()\n    Material.prototype.copy.call(material, this)\n    return material as this\n  }\n}\n\nconst materialMap: { [key: string]: Material } = {}\n\nconst createMaterial = (\n  type: string,\n  vertexShader: string,\n  fragmentShader: string\n) => {\n  if (materialMap[type] != null) {\n    return materialMap[type]\n  }\n\n  const material = new Material(type, { color: 0xff0000 })\n  material.uniforms.inverseModelMatrix = { value: new THREE.Matrix4() }\n  material.uniforms.inverseNormalMatrix = { value: new THREE.Matrix3() }\n\n  material.onBeforeCompile = (shader: THREE.Shader) => {\n    Object.assign(shader.uniforms, material.uniforms)\n    material.uniforms = shader.uniforms\n\n    shader.vertexShader = vertexShader\n    shader.fragmentShader = fragmentShader\n  }\n\n  // Necessary because of a bug in THREE.JS\n  // https://github.com/mrdoob/three.js/issues/15948\n  material.onBeforeCompile.toString = () => type\n\n  materialMap[type] = material\n  return material\n}\n\nexport default createMaterial\nexport { Material }\n","import * as THREE from 'three'\nimport ComboControls from '@cognite/three-combo-controls'\nimport { Material } from './materials'\n\nconst inverseModelMatrix = new THREE.Matrix4()\nconst modelViewMatrix = new THREE.Matrix4()\nconst normalMatrix = new THREE.Matrix3()\nconst inverseNormalMatrix = new THREE.Matrix3()\n\nconst adjustCamera = (\n  camera: THREE.PerspectiveCamera,\n  width: number,\n  height: number\n) => {\n  if (camera instanceof THREE.PerspectiveCamera) {\n    camera.aspect = width / height\n  }\n  camera.updateProjectionMatrix()\n}\n\nexport default class Visualizer {\n  private renderer: THREE.WebGLRenderer\n  private canvas: HTMLCanvasElement\n  public scene: THREE.Scene\n  private camera: THREE.PerspectiveCamera\n  private ambientLight: THREE.AmbientLight\n  private directionalLight: THREE.DirectionalLight\n  private controls: ComboControls\n  private clock: THREE.Clock\n  private domElement: HTMLElement\n  private object: THREE.Object3D\n  private materials: { [key: string]: Material }\n\n  // @ts-ignore\n  private latestRequestId?: number\n\n  constructor(domElement: HTMLElement) {\n    this.renderer = new THREE.WebGLRenderer()\n\n    this.canvas = this.renderer.domElement\n    this.domElement = domElement\n    this.domElement.appendChild(this.canvas)\n    this.setupCanvas(this.canvas)\n\n    this.scene = new THREE.Scene()\n\n    this.ambientLight = new THREE.AmbientLight(0xffffff)\n    this.directionalLight = new THREE.DirectionalLight(0xffffff)\n    this.setupLights(this.ambientLight, this.directionalLight, this.scene)\n\n    this.camera = new THREE.PerspectiveCamera(60, 640 / 480, 0.1, 10000)\n    this.setupCamera(this.camera)\n    this.controls = new ComboControls(this.camera, this.canvas)\n\n    this.latestRequestId = undefined\n    this.clock = new THREE.Clock()\n    this.object = new THREE.Object3D()\n    this.scene.add(this.object)\n\n    this.materials = {}\n    this.animate()\n  }\n\n  add = (object: THREE.Mesh) => {\n    if (object.material instanceof Material) {\n      const material = object.material as Material\n      const materialType = material.type\n      if (this.materials[materialType] == null) {\n        this.materials[materialType] = material\n      }\n    }\n\n    this.object.add(object)\n  }\n\n  remove = (object: THREE.Mesh) => {\n    this.object.remove(object)\n  }\n\n  setupLights = (\n    ambientLight: THREE.AmbientLight,\n    directionalLight: THREE.DirectionalLight,\n    scene: THREE.Scene\n  ) => {\n    ambientLight.intensity = 0.3\n    directionalLight.intensity = 0.7\n    scene.add(directionalLight)\n    scene.add(ambientLight)\n  }\n\n  setupCanvas = (canvas: HTMLCanvasElement) => {\n    canvas.style.width = '640px'\n    canvas.style.height = '480px'\n    canvas.style.minWidth = '100%'\n    canvas.style.minHeight = '100%'\n    canvas.style.maxWidth = '100%'\n    canvas.style.maxHeight = '100%'\n  }\n\n  setupCamera = (camera: THREE.PerspectiveCamera) => {\n    camera.position.set(10, 10, 10)\n    camera.lookAt(new THREE.Vector3(0, 0, 0))\n  }\n\n  updateUniforms = (camera: THREE.PerspectiveCamera) => {\n    this.object.matrixWorld.copy(this.object.matrixWorld).invert()\n    modelViewMatrix\n      .copy(camera.matrixWorldInverse)\n      .multiply(this.object.matrixWorld)\n    normalMatrix.getNormalMatrix(modelViewMatrix)\n    inverseNormalMatrix.copy(normalMatrix).invert()\n\n    Object.values(this.materials).forEach((material) => {\n      if (material.uniforms.inverseModelMatrix != null) {\n        material.uniforms.inverseModelMatrix.value.copy(inverseModelMatrix)\n      }\n      if (material.uniforms.inverseNormalMatrix != null) {\n        material.uniforms.inverseNormalMatrix.value.copy(inverseNormalMatrix)\n      }\n    })\n  }\n\n  animate = () => {\n    this.resizeIfNeeded()\n    this.controls.update(this.clock.getDelta())\n    this.updateUniforms(this.camera)\n    this.renderer.render(this.scene, this.camera)\n    this.latestRequestId = requestAnimationFrame(this.animate.bind(this))\n    // console.log(this.camera.position.clone())\n  }\n\n  resizeIfNeeded = () => {\n    // The maxTextureSize is chosen from testing on low-powered hardware,\n    // and could be increased in the future.\n    // TODO Increase maxTextureSize if SSAO performance is improved\n    const maxTextureSize = 1.4e6\n\n    const rendererSize = this.renderer.getSize(new THREE.Vector2())\n    const rendererPixelWidth = rendererSize.width\n    const rendererPixelHeight = rendererSize.height\n\n    // client width and height are in virtual pixels and not yet scaled by dpr\n    // TODO VERSION 5.0.0 remove the test for dom element size once we have removed the getCanvas function\n    const clientWidth =\n      this.domElement.clientWidth !== 0\n        ? this.domElement.clientWidth\n        : this.canvas.clientWidth\n    const clientHeight =\n      this.domElement.clientHeight !== 0\n        ? this.domElement.clientHeight\n        : this.canvas.clientHeight\n    const clientPixelWidth = window.devicePixelRatio * clientWidth\n    const clientPixelHeight = window.devicePixelRatio * clientHeight\n    const clientTextureSize = clientPixelWidth * clientPixelHeight\n\n    const scale =\n      clientTextureSize > maxTextureSize\n        ? Math.sqrt(maxTextureSize / clientTextureSize)\n        : 1\n\n    const width = clientPixelWidth * scale\n    const height = clientPixelHeight * scale\n\n    const maxError = 0.1 // pixels\n    const isOptimalSize =\n      Math.abs(rendererPixelWidth - width) < maxError &&\n      Math.abs(rendererPixelHeight - height) < maxError\n\n    if (isOptimalSize) {\n      return false\n    }\n\n    this.renderer.setSize(width, height)\n\n    adjustCamera(this.camera, width, height)\n\n    return true\n  }\n}\n","import * as THREE from 'three'\nimport fragmentShader from './fragment'\nimport vertexShader from './vertex'\nimport createMaterial from 'core/materials'\n\nclass Particles {\n  positions: Float32Array\n  indices: Float32Array\n  radii: Float32Array\n  colors: THREE.Color[]\n  numParticles: number\n  capacity: number\n  mesh?: THREE.InstancedMesh\n\n  constructor(capacity: number) {\n    this.positions = new Float32Array(3 * capacity)\n    this.indices = new Float32Array(capacity)\n    this.radii = new Float32Array(capacity)\n    this.colors = []\n    this.numParticles = 0\n    this.capacity = capacity\n    this.mesh = undefined\n  }\n\n  addParticle(\n    x: number,\n    y: number,\n    z: number,\n    radius: number,\n    r: number = 1.0,\n    g: number = 0.0,\n    b: number = 0.0\n  ) {\n    if (this.numParticles === this.capacity) {\n      console.log(\"Warning, can't add particle because arrays are full\")\n      return\n    }\n\n    const index = this.numParticles\n\n    this.positions[3 * index + 0] = x\n    this.positions[3 * index + 1] = y\n    this.positions[3 * index + 2] = z\n    this.colors.push(new THREE.Color(r / 255, g / 255, b / 255))\n    this.radii[index] = radius * 0.25\n    this.indices[index] = index\n\n    this.numParticles += 1\n  }\n\n  getRadius = (index: number) => {\n    return this.radii[index]\n  }\n\n  getPosition = (index: number) => {\n    return new THREE.Vector3(\n      this.positions[3 * index + 0],\n      this.positions[3 * index + 1],\n      this.positions[3 * index + 2]\n    )\n  }\n\n  getGeometry = () => {\n    const baseGeometry = new THREE.PlaneBufferGeometry(1, 1, 1, 1)\n    const geometry = new THREE.InstancedBufferGeometry()\n\n    geometry.instanceCount = this.numParticles\n    geometry.setIndex(baseGeometry.getIndex())\n    geometry.setAttribute('position', baseGeometry.getAttribute('position'))\n    geometry.setAttribute('normal', baseGeometry.getAttribute('normal'))\n\n    geometry.setAttribute(\n      'particlePosition',\n      new THREE.InstancedBufferAttribute(this.positions, 3, false, 1)\n    )\n    geometry.setAttribute(\n      'particleRadius',\n      new THREE.InstancedBufferAttribute(this.radii, 1, false, 1)\n    )\n    return geometry\n  }\n\n  getMesh = () => {\n    if (this.mesh != null) {\n      return this.mesh\n    }\n    const geometry = this.getGeometry()\n    const material = createMaterial('particle', vertexShader, fragmentShader)\n    this.mesh = new THREE.InstancedMesh(geometry, material, this.numParticles)\n\n    const matrix = new THREE.Matrix4()\n    for (let i = 0; i < this.numParticles; i++) {\n      this.mesh.setMatrixAt(i, matrix)\n      this.mesh.setColorAt(i, this.colors[i])\n    }\n    this.mesh.frustumCulled = false\n\n    return this.mesh\n  }\n}\n\nexport default Particles\n","export default /* glsl */ `\n#define PHONG\n\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n\nvarying vec3 vSurfacePoint;\nvarying vec3 vCenter;\nvarying float vRadius;\n\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\n\nvoid main() {\n\n\t#include <clipping_planes_fragment>\n\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\n\tvec3 rayTarget = vSurfacePoint;\n\tvec3 rayDirection = normalize(rayTarget); // rayOrigin is (0,0,0) in camera space\n\n\tvec3 diff = rayTarget - vCenter.xyz;\n    vec3 E = diff;\n    vec3 D = rayDirection;\n\n    float a = dot(D, D);\n    float b = dot(E, D);\n    float c = dot(E, E) - vRadius*vRadius;\n\n    // discriminant of sphere equation (factor 2 removed from b above)\n    float d = b*b - a*c;\n    if(d < 0.0)\n        discard;\n\t\n    float sqrtd = sqrt(d);\n    float dist1 = (-b - sqrtd)/a;\n    float dist2 = (-b + sqrtd)/a;\n\n    // Make sure dist1 is the smaller one\n    if (dist2 < dist1) {\n        float tmp = dist1;\n        dist1 = dist2;\n        dist2 = tmp;\n    }\n\n    float dist = dist1;\n    float intersectionPointZ = E.z + dist*D.z;\n\tvec3 p = rayTarget + dist*rayDirection;\n\n\t// Find normal vector in local space\n    normal = normalize(vec3(p - vCenter.xyz));\n    // Transform into camera space\n    if (dot(normal, rayDirection) >  0.) {\n        normal = -normal;\n    }\n\n\t#include <emissivemap_fragment>\n\n\t// accumulation\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\n\t// modulation\n\t#include <aomap_fragment>\n\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\n\t#include <envmap_fragment>\n\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n\n}\n`\n","export interface Color {\n  r: number\n  g: number\n  b: number\n}\n\nexport interface AtomType {\n  fullname: string\n  radius: number\n  color: Color\n}\n\nconst AtomTypes: { [key: string]: AtomType } = {\n  H: { fullname: 'hydrogen', radius: 1.2, color: { r: 204, g: 204, b: 204 } },\n  He: { fullname: 'helium', radius: 1.4, color: { r: 217, g: 255, b: 255 } },\n  Li: { fullname: 'lithium', radius: 1.82, color: { r: 204, g: 128, b: 255 } },\n  Be: { fullname: 'beryllium', radius: 1.53, color: { r: 194, g: 255, b: 0 } },\n  B: { fullname: 'boron', radius: 1.92, color: { r: 255, g: 181, b: 181 } },\n  C: { fullname: 'carbon', radius: 1.7, color: { r: 80, g: 80, b: 80 } },\n  N: { fullname: 'nitrogen', radius: 1.55, color: { r: 48, g: 80, b: 248 } },\n  O: { fullname: 'oxygen', radius: 1.52, color: { r: 170, g: 0, b: 0 } },\n  F: { fullname: 'fluorine', radius: 1.35, color: { r: 144, g: 224, b: 80 } },\n  Ne: { fullname: 'neon', radius: 1.54, color: { r: 48, g: 80, b: 248 } },\n  Na: { fullname: 'sodium', radius: 2.27, color: { r: 171, g: 92, b: 242 } },\n  Mg: { fullname: 'magnesium', radius: 1.73, color: { r: 138, g: 255, b: 0 } },\n  Al: {\n    fullname: 'aluminium',\n    radius: 1.84,\n    color: { r: 191, g: 166, b: 166 }\n  },\n  Si: { fullname: 'silicon', radius: 2.27, color: { r: 240, g: 200, b: 160 } },\n  P: { fullname: 'phosphorus', radius: 1.8, color: { r: 255, g: 128, b: 0 } },\n  S: { fullname: 'sulfur', radius: 1.8, color: { r: 255, g: 255, b: 48 } },\n  Cl: { fullname: 'chlorine', radius: 1.75, color: { r: 31, g: 240, b: 31 } },\n  Ar: { fullname: 'argon', radius: 1.88, color: { r: 128, g: 209, b: 227 } },\n  K: { fullname: 'potassium', radius: 2.75, color: { r: 143, g: 64, b: 212 } },\n  Ca: { fullname: 'calcium', radius: 2.31, color: { r: 61, g: 255, b: 0 } },\n  Sc: { fullname: 'scandium', radius: 2.11, color: { r: 230, g: 230, b: 230 } },\n  Ti: { fullname: 'titanium', radius: 2.0, color: { r: 191, g: 194, b: 199 } },\n  V: { fullname: 'vanadium', radius: 2.0, color: { r: 166, g: 166, b: 171 } },\n  Cr: { fullname: 'chromium', radius: 2.0, color: { r: 138, g: 153, b: 199 } },\n  Mn: { fullname: 'manganese', radius: 2.0, color: { r: 156, g: 122, b: 199 } },\n  Fe: { fullname: 'iron', radius: 2.0, color: { r: 224, g: 102, b: 51 } },\n  Co: { fullname: 'cobalt', radius: 2.0, color: { r: 240, g: 144, b: 160 } },\n  Ni: { fullname: 'nickel', radius: 1.63, color: { r: 80, g: 208, b: 80 } },\n  Cu: { fullname: 'copper', radius: 1.4, color: { r: 200, g: 128, b: 51 } },\n  Zn: { fullname: 'zinc', radius: 1.39, color: { r: 125, g: 128, b: 176 } },\n  Ga: { fullname: 'gallium', radius: 1.87, color: { r: 194, g: 143, b: 143 } },\n  Ge: {\n    fullname: 'germanium',\n    radius: 2.11,\n    color: { r: 102, g: 143, b: 143 }\n  },\n  As: { fullname: 'arsenic', radius: 1.85, color: { r: 189, g: 128, b: 227 } },\n  Se: { fullname: 'selenium', radius: 1.9, color: { r: 255, g: 161, b: 0 } },\n  Br: { fullname: 'bromine', radius: 1.85, color: { r: 166, g: 41, b: 41 } },\n  Kr: { fullname: 'krypton', radius: 2.02, color: { r: 92, g: 184, b: 209 } },\n  Rb: { fullname: 'rubidium', radius: 3.03, color: { r: 112, g: 46, b: 176 } },\n  Sr: { fullname: 'strontium', radius: 2.49, color: { r: 0, g: 255, b: 0 } },\n  Y: { fullname: 'yttrium', radius: 2.0, color: { r: 148, g: 255, b: 255 } },\n  Zr: { fullname: 'zirconium', radius: 2.0, color: { r: 148, g: 224, b: 224 } },\n  Nb: { fullname: 'niobium', radius: 2.0, color: { r: 115, g: 194, b: 201 } },\n  Mo: { fullname: 'molybdenum', radius: 2.0, color: { r: 84, g: 181, b: 181 } },\n  Tc: { fullname: 'technetium', radius: 2.0, color: { r: 59, g: 158, b: 158 } },\n  Ru: { fullname: 'ruthenium', radius: 2.0, color: { r: 36, g: 143, b: 143 } },\n  Rh: { fullname: 'rhodium', radius: 2.0, color: { r: 10, g: 125, b: 140 } },\n  Pd: { fullname: 'palladium', radius: 1.63, color: { r: 0, g: 105, b: 133 } },\n  Ag: { fullname: 'silver', radius: 1.72, color: { r: 192, g: 192, b: 192 } },\n  Cd: { fullname: 'cadmium', radius: 1.58, color: { r: 255, g: 217, b: 143 } },\n  In: { fullname: 'indium', radius: 1.93, color: { r: 166, g: 117, b: 115 } },\n  Sn: { fullname: 'tin', radius: 2.17, color: { r: 102, g: 128, b: 128 } },\n  Sb: { fullname: 'antimony', radius: 2.06, color: { r: 158, g: 99, b: 181 } },\n  Te: { fullname: 'tellurium', radius: 2.06, color: { r: 212, g: 122, b: 0 } },\n  I: { fullname: 'iodine', radius: 1.98, color: { r: 148, g: 0, b: 148 } },\n  Xe: { fullname: 'xenon', radius: 2.16, color: { r: 66, g: 158, b: 176 } },\n  Cs: { fullname: 'caesium', radius: 3.43, color: { r: 87, g: 23, b: 143 } },\n  Ba: { fullname: 'barium', radius: 2.68, color: { r: 0, g: 201, b: 0 } },\n  La: { fullname: 'lanthanum', radius: 2.0, color: { r: 112, g: 212, b: 255 } },\n  Ce: { fullname: 'cerium', radius: 2.0, color: { r: 255, g: 255, b: 199 } },\n  Pr: {\n    fullname: 'praseodymium',\n    radius: 2.0,\n    color: { r: 217, g: 255, b: 199 }\n  },\n  Nd: { fullname: 'neodymium', radius: 2.0, color: { r: 199, g: 255, b: 199 } },\n  Pm: {\n    fullname: 'promethium',\n    radius: 2.0,\n    color: { r: 163, g: 255, b: 199 }\n  },\n  Sm: { fullname: 'samarium', radius: 2.0, color: { r: 143, g: 255, b: 199 } },\n  Eu: { fullname: 'europium', radius: 2.0, color: { r: 97, g: 255, b: 199 } },\n  Gd: { fullname: 'gadolinium', radius: 2.0, color: { r: 69, g: 255, b: 199 } },\n  Tb: { fullname: 'terbium', radius: 2.0, color: { r: 48, g: 255, b: 199 } },\n  Dy: { fullname: 'dysprosium', radius: 2.0, color: { r: 31, g: 255, b: 199 } },\n  Ho: { fullname: 'holmium', radius: 2.0, color: { r: 0, g: 255, b: 156 } },\n  Er: { fullname: 'erbium', radius: 2.0, color: { r: 0, g: 230, b: 117 } },\n  Tm: { fullname: 'thulium', radius: 2.0, color: { r: 0, g: 212, b: 82 } },\n  Yb: { fullname: 'ytterbium', radius: 2.0, color: { r: 0, g: 191, b: 56 } },\n  Lu: { fullname: 'lutetium', radius: 2.0, color: { r: 0, g: 171, b: 36 } },\n  Hf: { fullname: 'hafnium', radius: 2.0, color: { r: 77, g: 194, b: 255 } },\n  Ta: { fullname: 'tantalum', radius: 2.0, color: { r: 77, g: 166, b: 255 } },\n  W: { fullname: 'tungsten', radius: 2.0, color: { r: 33, g: 148, b: 214 } }\n}\n\nexport default AtomTypes\n","import Particles from 'core/geometries/particles/particles'\nimport AtomTypes from 'core/atomtypes'\n\nfunction addParticlesToFrame(lines: string[], i: number, frame: Particles) {\n  for (let j = 0; j < frame.capacity; j++) {\n    const lineData = lines[i + j].split(/\\s+/).filter(Boolean)\n    const element = lineData[0]\n\n    const atomType = AtomTypes[element]\n    let color = { r: 255, g: 102, b: 102 }\n    let radius = 1.0\n    if (atomType) {\n      radius = atomType.radius\n      color = atomType.color\n    }\n    const x = parseFloat(lineData[1])\n    const y = parseFloat(lineData[2])\n    const z = parseFloat(lineData[3])\n\n    frame.addParticle(x, y, z, radius, color.r, color.g, color.b)\n  }\n}\n\nconst parseXyz = (data: string): Particles[] => {\n  let currentFrame: Particles | undefined\n  const frames: Particles[] = []\n\n  const lines = data.split('\\n')\n  const numLines = lines.length\n  let i = 0\n  let skipNextLine = false\n  let readNumParticles = true\n\n  while (i < numLines) {\n    if (lines[i] === '') {\n      i++\n      continue\n    }\n\n    if (skipNextLine) {\n      skipNextLine = false\n    } else if (readNumParticles) {\n      const numParticles = parseInt(lines[i], 10)\n\n      if (isNaN(numParticles)) {\n        console.log('Warning, got NaN as numParticles')\n        return frames\n      }\n\n      currentFrame = new Particles(numParticles)\n      readNumParticles = false\n      skipNextLine = true\n    } else {\n      if (currentFrame) {\n        addParticlesToFrame(lines, i, currentFrame)\n        frames.push(currentFrame)\n        i += currentFrame.numParticles - 1\n        readNumParticles = true\n      }\n    }\n\n    i++\n  }\n  return frames\n}\n\nexport default parseXyz\n","import React, {useEffect, useState} from 'react'\n\nimport { OMOVIVisualizer, Particles, parseXyz } from 'omovi'\n\nimport 'omovi/dist/index.css'\nconst N = 100000;\nconst particles1 = new Particles(N);\nparticles1.addParticle(-0.5, 0, 0, 0.5)\nparticles1.addParticle(0.5, 0, 0, 0.5)\n\nconst particles2 = new Particles(N);\nparticles2.addParticle(-0.5, 0.5, 0, 0.5)\nparticles2.addParticle(0.5, -0.5, 0, 0.5)\n\nfor (let i = 0; i < N; i++) {\n  let x = 500 * (Math.random() - 0.5);\n  let y = 500 * (Math.random() - 0.5);\n  let z = 500 * (Math.random() - 0.5);\n  let r = 0.5 + Math.random();\n  particles1.addParticle(x,y,z,r)\n\n  x = 500 * (Math.random() - 0.5);\n  y = 500 * (Math.random() - 0.5);\n  z = 500 * (Math.random() - 0.5);\n  r = 0.5 + Math.random();\n  particles2.addParticle(x,y,z,r)\n}\n\nconst App = () => {\n  const [data, setData] = useState<Particles[]>([])\n  const [frame, setFrame] = useState<number>(0)\n  \n  useEffect(() => {\n    const downloadData = async () => {\n      console.log(\"Will download data\")\n      const xyzFile = await fetch(\"https://raw.githubusercontent.com/andeplane/simulations/main/lj.xiz\")\n      const particles = parseXyz(await xyzFile.text())\n      setData(particles)\n    }\n    downloadData()\n\n  }, [])\n\n  setTimeout(() => {\n    if (data.length === 0) {\n      return\n    }\n\n    let nextFrame = frame + 1\n    if (nextFrame >= data.length) {\n      nextFrame = 0\n    }\n    setFrame(nextFrame)\n  }, 50)\n  \n  if (data.length === 0) {\n    return <>Downloading simulation data ...</>\n  }\n  const particles = data[frame]\n  \n  return <OMOVIVisualizer particles={particles} />\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}